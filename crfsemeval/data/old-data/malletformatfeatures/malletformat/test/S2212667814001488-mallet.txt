This	O	0,4
paper	O	5,10
presents	O	11,19
general	O	20,27
results	O	28,35
on	O	36,38
the	O	39,42
Java	B-KP	43,47
source	I-KP	48,54
code	I-KP	55,59
snippet	I-KP	60,67
detection	I-KP	68,77
problem.	O	78,85

We	O	87,89
propose	O	90,97
the	O	98,101
tool	O	102,106
which	O	107,112
uses	O	113,117
graph	B-KP	118,123
and	I-KP	124,127
subgraph	I-KP	128,136
isomorphism	I-KP	137,148
detection.	I-KP	149,158

A	O	160,161
number	O	162,168
of	O	169,171
solutions	O	172,181
for	O	182,185
all	O	186,189
of	O	190,192
these	O	193,198
tasks	O	199,204
have	O	205,209
been	O	210,214
proposed	O	215,223
in	O	224,226
the	O	227,230
literature.	O	231,241

However,	O	243,250
although	O	252,260
that	O	261,265
all	O	266,269
these	O	270,275
solutions	O	276,285
are	O	286,289
really	O	290,296
fast,	O	297,301
they	O	303,307
compare	B-KP	308,315
just	I-KP	316,320
the	I-KP	321,324
constant	I-KP	325,333
static	I-KP	334,340
trees.	I-KP	341,346

Our	O	348,351
solution	O	352,360
offers	O	361,367
to	O	368,370
enter	B-KP	371,376
an	I-KP	377,379
input	I-KP	380,385
sample	I-KP	386,392
dynamically	I-KP	393,404
with	O	405,409
the	O	410,413
Scripthon	B-KP	414,423
language	I-KP	424,432
while	O	433,438
preserving	B-KP	439,449
an	I-KP	450,452
acceptable	I-KP	453,463
speed.	I-KP	464,469

We	O	471,473
used	O	474,478
several	B-KP	479,486
optimizations	I-KP	487,500
to	O	501,503
achieve	O	504,511
very	O	512,516
low	O	517,520
number	O	521,527
of	O	528,530
comparisons	B-KP	531,542
during	O	543,549
the	O	550,553
matching	B-KP	554,562
algorithm.	I-KP	563,572

